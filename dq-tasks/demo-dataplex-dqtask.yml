# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
row_filters:
  NONE:
    filter_sql_expr: |-
      True

rule_dimensions:
  - consistency
  - correctness
  - duplication
  - completeness
  - conformance

rules:
  NOT_NULL_SIMPLE:
    rule_type: NOT_NULL
    dimension: completeness

  REGEX_VALID_EMAIL:
    rule_type: REGEX
    dimension: conformance
    params:
      pattern: |-
        ^[^@]+[@]{1}[^@]+$

  CUSTOM_SQL_LENGTH:
    rule_type: CUSTOM_SQL_EXPR
    dimension: correctness
    custom_sql_arguments:
      - upper_bound
    params:
      custom_sql_expr: |-
        LENGTH( $column ) <= $upper_bound

  CORRECT_CURRENCY_CODE:
    rule_type: CUSTOM_SQL_EXPR
    dimension: conformance
    params:
      custom_sql_expr: |-
        $column in (select distinct currency_code from `<reference_dataset-id>.currency_codes`)

  FOREIGN_KEY_VALID:
    rule_type: CUSTOM_SQL_EXPR
    dimension: consistency
    params:
      custom_sql_expr: |-
        $column in (select distinct node_id from `clouddq_dataset.inventory`)

  NOT_BLANK:
    rule_type: NOT_BLANK
    dimension: completeness

  VALUE_ZERO_OR_POSITIVE:
    rule_type: CUSTOM_SQL_EXPR
    dimension: correctness
    params:
      custom_sql_expr: |-
        $column >= 0

  NO_DUPLICATES_IN_COLUMN_GROUPS:
    rule_type: CUSTOM_SQL_STATEMENT
    params:
      custom_sql_arguments:
        - column_names
      custom_sql_statement: |-
        select a.*
        from data a
        inner join (
          select
            $column_names
          from data
          group by $column_names
          having count(*) > 1
        ) duplicates
        using ($column_names)
      
  ROW_COUNT:
    rule_type: CUSTOM_SQL_STATEMENT
    custom_sql_arguments:
      n_max
    params:
      custom_sql_statement: |-
        select 
          count(
              case when $column is null then 0
              else $column
              end) as n
        from data
        group by ts, node_id, kpi
        having n != $n_max

rule_bindings:
  DQ_COUNT:
    entity_uri: bigquery://projects/clouddq-demo-353519/datasets/clouddq_dataset/tables/metrics
    column_id: VALUE
    row_filter_id: NONE
    rule_ids:
      - ROW_COUNT:
          n_max: 1
    metadata:
      brand: two